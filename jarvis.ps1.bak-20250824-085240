param(
  [string]$Text = "",
  [switch]$SpeakBack
)

# === Auto-import (wrappers, builder, skills) ===
try { . (Join-Path $PSScriptRoot 'tools\wrappers.ps1') } catch {}
try { . (Join-Path $PSScriptRoot 'tools\builder_agents.ps1') } catch {}
Get-ChildItem -Path (Join-Path $PSScriptRoot 'tools\skills\*.ps1') -EA SilentlyContinue | ForEach-Object { try { . $_.FullName } catch {} }

# == spørg jarvis og læs router ==
try {
  if ($Text -imatch '^\s*spørg\s+jarvis\s+og\s+l(?:æ|ae)s\s*:\s*(.+)$') {
    $q = $Matches[1]
    if (Get-Command askdk_mini -EA SilentlyContinue) {
      $ans = if ($q.Length -lt 120) { askdk_mini $q } else { askdk_pro $q }
    } else {
      $ask = Join-Path (Join-Path $PSScriptRoot 'tools') 'ask_ai.ps1'
      if (Test-Path $ask) { $ans = & $ask -Provider chatgpt -Prompt $q } else { $ans = "[INFO] Ingen ask_ai.ps1/wrappers fundet." }
    }
    $ans | Write-Output
    return
  }
} catch { Write-Warning "spørg/læs fejlede: $($_.Exception.Message)" }
# == /spørg router ==
$ErrorActionPreference = "Stop"

# Valgfrit: indlæs wrappers/builder roligt (må gerne fejle lydløst)
try { . (Join-Path $PSScriptRoot 'tools\wrappers.ps1') } catch {}
try { . (Join-Path $PSScriptRoot 'tools\builder_agents.ps1') } catch {}

# == el-liste router ==
try {
  if ($Text -imatch '^\s*el-liste\s*:\s*(.+)$') {
    if (-not (Get-Command Invoke-ElListe -EA SilentlyContinue)) {
      $skillPath = Join-Path (Join-Path $PSScriptRoot 'tools') 'skills\el-liste.ps1'
      if (Test-Path $skillPath) { . $skillPath }
    }
    $bul = $Matches[1]
    $ans = Invoke-ElListe -Bullets $bul
    $ans | Write-Output
    return
  }
} catch { Write-Warning "el-liste fejlede: $($_.Exception.Message)" }
# == /el-liste router ==

# == el-sum router (tillad multi-line input) ==
try {
  if ($Text -imatch '^\s*el-sum\s*:\s*([\s\S]+)$') {
    if (-not (Get-Command Invoke-ElSum -EA SilentlyContinue)) {
      $skillPath = Join-Path (Join-Path $PSScriptRoot 'tools') 'skills\el-sum.ps1'
      if (Test-Path $skillPath) { . $skillPath }
    }
    $blob = $Matches[1].Trim()
    $ans  = Invoke-ElSum -Text $blob
    $ans | Write-Output
    return
  }
} catch { Write-Warning "el-sum fejlede: $($_.Exception.Message)" }
# == /el-sum router ==

# == "spørg jarvis og læs" router ==
try {
  if ($Text -imatch '^\s*spørg\s+jarvis\s+og\s+læs\s*:\s*(.+)$') {
    $q = $Matches[1]
    if (Get-Command askdk_mini -EA SilentlyContinue) {
      $ans = if ($q.Length -lt 120) { askdk_mini $q } else { askdk_pro $q }
      $ans | Write-Output
      return
    } else {
      Write-Output "[INFO] wrappers.ps1 ikke indlæst – kan ikke spørge lokalt LLM."
      return
    }
  }
} catch { Write-Warning "spørg/læs fejlede: $($_.Exception.Message)" }
# == /spørg router ==

# Fallback
if ($Text) {
  Write-Output "Ukendt kommando. Prøv: el-liste: ... | el-sum: ... | spørg jarvis og læs: ..."
} else {
  Write-Output "Jarvis LAB klar."
}

# == builder orchestrator routers ==
try {
  if ($Text -imatch '^\s*byg\s+m/assisten(?:ter)?\s*:\s*(.+)

# == spørge-router (tving askdk_pro) ==
try {
  if ($Text -imatch '^\s*spørg\s+jarvis\s+og\s+l(?:æ|ae)s\s*:\s*(.+)$') {
    $q = $Matches[1]

    # Hint til modellen hvis der bedes om 3 idéer
    if ($q -imatch '\b(giv|kom med|angiv)\s+3\b') {
      $q = "$q`nSvar i præcis 3 punktopstillede linjer, hver linje skal starte med '- '."
    }

    # Brug altid askdk_pro (bedre bullets på dansk)
    if (Get-Command askdk_pro -EA SilentlyContinue) {
      $ans = askdk_pro $q
    } else {
      # Fallback via ask_ai.ps1
      $ask = Join-Path (Join-Path $PSScriptRoot 'tools') 'ask_ai.ps1'
      if (Test-Path $ask) {
        $ans = & $ask -Provider chatgpt -Model 'llama3.1:8b' -TimeoutMs 120000 `
          -System "Skriv altid på flydende, korrekt dansk. Svar i punktopstilling når der bedes om flere idéer." `
          -Prompt $q
      } else {
        $ans = "[INFO] Ingen askdk_pro/ask_ai.ps1 fundet."
      }
    }

    # Fail-safe: hvis vi stadig ikke har 3 bullets, formater de første linjer som bullets
    $bulCount = ([regex]::Matches($ans,'(^|\r?\n)\s*(?:-|•|–|—|\d+\.)\s')).Count
    if ($bulCount -lt 3) {
      $first3 = New-Object System.Collections.Generic.List[string]
      foreach($l in ($ans -split '\r?\n')) {
        $t = $l.Trim()
        if ($t) { $first3.Add($t.TrimStart('-','•','–','—',' ')) }
        if ($first3.Count -ge 3) { break }
      }
      if ($first3.Count -gt 0) {
        $ans = ($first3 | ForEach-Object { '- ' + $_ }) -join [Environment]::NewLine
      }
    }

    $ans | Write-Output
    return
  }
} catch { Write-Warning "spørg/læs fejlede: $($_.Exception.Message)" }
# == /spørge-router ==) {
    $goal = $Matches[1]
    if (Get-Command Jarvis-Orchestrate -EA SilentlyContinue) {
      Jarvis-Orchestrate -Goal $goal
    } else {
      Write-Output "[INFO] builder_agents.ps1 ikke indlæst – Jarvis-Orchestrate mangler."
    }
    return
  }
  if ($Text -imatch '^\s*byg\s+og\s+anvend\s+m/assisten(?:ter)?\s*:\s*(.+)

# == spørge-router (tving askdk_pro) ==
try {
  if ($Text -imatch '^\s*spørg\s+jarvis\s+og\s+l(?:æ|ae)s\s*:\s*(.+)$') {
    $q = $Matches[1]

    # Hint til modellen hvis der bedes om 3 idéer
    if ($q -imatch '\b(giv|kom med|angiv)\s+3\b') {
      $q = "$q`nSvar i præcis 3 punktopstillede linjer, hver linje skal starte med '- '."
    }

    # Brug altid askdk_pro (bedre bullets på dansk)
    if (Get-Command askdk_pro -EA SilentlyContinue) {
      $ans = askdk_pro $q
    } else {
      # Fallback via ask_ai.ps1
      $ask = Join-Path (Join-Path $PSScriptRoot 'tools') 'ask_ai.ps1'
      if (Test-Path $ask) {
        $ans = & $ask -Provider chatgpt -Model 'llama3.1:8b' -TimeoutMs 120000 `
          -System "Skriv altid på flydende, korrekt dansk. Svar i punktopstilling når der bedes om flere idéer." `
          -Prompt $q
      } else {
        $ans = "[INFO] Ingen askdk_pro/ask_ai.ps1 fundet."
      }
    }

    # Fail-safe: hvis vi stadig ikke har 3 bullets, formater de første linjer som bullets
    $bulCount = ([regex]::Matches($ans,'(^|\r?\n)\s*(?:-|•|–|—|\d+\.)\s')).Count
    if ($bulCount -lt 3) {
      $first3 = New-Object System.Collections.Generic.List[string]
      foreach($l in ($ans -split '\r?\n')) {
        $t = $l.Trim()
        if ($t) { $first3.Add($t.TrimStart('-','•','–','—',' ')) }
        if ($first3.Count -ge 3) { break }
      }
      if ($first3.Count -gt 0) {
        $ans = ($first3 | ForEach-Object { '- ' + $_ }) -join [Environment]::NewLine
      }
    }

    $ans | Write-Output
    return
  }
} catch { Write-Warning "spørg/læs fejlede: $($_.Exception.Message)" }
# == /spørge-router ==) {
    $goal = $Matches[1]
    if (Get-Command Jarvis-Orchestrate -EA SilentlyContinue) {
      Jarvis-Orchestrate -Goal $goal -Approve
    } else {
      Write-Output "[INFO] builder_agents.ps1 ikke indlæst – Jarvis-Orchestrate mangler."
    }
    return
  }
} catch { Write-Warning "builder orchestrator fejlede: $(param(
  [string]$Text = "",
  [switch]$SpeakBack
)

# === Auto-import (wrappers, builder, skills) ===
try { . (Join-Path $PSScriptRoot 'tools\wrappers.ps1') } catch {}
try { . (Join-Path $PSScriptRoot 'tools\builder_agents.ps1') } catch {}
Get-ChildItem -Path (Join-Path $PSScriptRoot 'tools\skills\*.ps1') -EA SilentlyContinue | ForEach-Object { try { . $_.FullName } catch {} }

# == spørg jarvis og læs router ==
try {
  if ($Text -imatch '^\s*spørg\s+jarvis\s+og\s+l(?:æ|ae)s\s*:\s*(.+)$') {
    $q = $Matches[1]
    if (Get-Command askdk_mini -EA SilentlyContinue) {
      $ans = if ($q.Length -lt 120) { askdk_mini $q } else { askdk_pro $q }
    } else {
      $ask = Join-Path (Join-Path $PSScriptRoot 'tools') 'ask_ai.ps1'
      if (Test-Path $ask) { $ans = & $ask -Provider chatgpt -Prompt $q } else { $ans = "[INFO] Ingen ask_ai.ps1/wrappers fundet." }
    }
    $ans | Write-Output
    return
  }
} catch { Write-Warning "spørg/læs fejlede: $($_.Exception.Message)" }
# == /spørg router ==
$ErrorActionPreference = "Stop"

# Valgfrit: indlæs wrappers/builder roligt (må gerne fejle lydløst)
try { . (Join-Path $PSScriptRoot 'tools\wrappers.ps1') } catch {}
try { . (Join-Path $PSScriptRoot 'tools\builder_agents.ps1') } catch {}

# == el-liste router ==
try {
  if ($Text -imatch '^\s*el-liste\s*:\s*(.+)$') {
    if (-not (Get-Command Invoke-ElListe -EA SilentlyContinue)) {
      $skillPath = Join-Path (Join-Path $PSScriptRoot 'tools') 'skills\el-liste.ps1'
      if (Test-Path $skillPath) { . $skillPath }
    }
    $bul = $Matches[1]
    $ans = Invoke-ElListe -Bullets $bul
    $ans | Write-Output
    return
  }
} catch { Write-Warning "el-liste fejlede: $($_.Exception.Message)" }
# == /el-liste router ==

# == el-sum router (tillad multi-line input) ==
try {
  if ($Text -imatch '^\s*el-sum\s*:\s*([\s\S]+)$') {
    if (-not (Get-Command Invoke-ElSum -EA SilentlyContinue)) {
      $skillPath = Join-Path (Join-Path $PSScriptRoot 'tools') 'skills\el-sum.ps1'
      if (Test-Path $skillPath) { . $skillPath }
    }
    $blob = $Matches[1].Trim()
    $ans  = Invoke-ElSum -Text $blob
    $ans | Write-Output
    return
  }
} catch { Write-Warning "el-sum fejlede: $($_.Exception.Message)" }
# == /el-sum router ==

# == "spørg jarvis og læs" router ==
try {
  if ($Text -imatch '^\s*spørg\s+jarvis\s+og\s+læs\s*:\s*(.+)$') {
    $q = $Matches[1]
    if (Get-Command askdk_mini -EA SilentlyContinue) {
      $ans = if ($q.Length -lt 120) { askdk_mini $q } else { askdk_pro $q }
      $ans | Write-Output
      return
    } else {
      Write-Output "[INFO] wrappers.ps1 ikke indlæst – kan ikke spørge lokalt LLM."
      return
    }
  }
} catch { Write-Warning "spørg/læs fejlede: $($_.Exception.Message)" }
# == /spørg router ==

# Fallback
if ($Text) {
  Write-Output "Ukendt kommando. Prøv: el-liste: ... | el-sum: ... | spørg jarvis og læs: ..."
} else {
  Write-Output "Jarvis LAB klar."
}

# == builder orchestrator routers ==
try {
  if ($Text -imatch '^\s*byg\s+m/assisten(?:ter)?\s*:\s*(.+)$') {
    Jarvis-Orchestrate -Goal $Matches[1]
    return
  }
  if ($Text -imatch '^\s*byg\s+og\s+anvend\s+m/assisten(?:ter)?\s*:\s*(.+)$') {
    Jarvis-Orchestrate -Goal $Matches[1] -Approve
    return
  }
} catch { Write-Warning "builder orchestrator fejlede: $($_.Exception.Message)" }
# == /builder orchestrator routers ==

# == spørge-router (tving askdk_pro) ==
try {
  if ($Text -imatch '^\s*spørg\s+jarvis\s+og\s+l(?:æ|ae)s\s*:\s*(.+)$') {
    $q = $Matches[1]

    # Hint til modellen hvis der bedes om 3 idéer
    if ($q -imatch '\b(giv|kom med|angiv)\s+3\b') {
      $q = "$q`nSvar i præcis 3 punktopstillede linjer, hver linje skal starte med '- '."
    }

    # Brug altid askdk_pro (bedre bullets på dansk)
    if (Get-Command askdk_pro -EA SilentlyContinue) {
      $ans = askdk_pro $q
    } else {
      # Fallback via ask_ai.ps1
      $ask = Join-Path (Join-Path $PSScriptRoot 'tools') 'ask_ai.ps1'
      if (Test-Path $ask) {
        $ans = & $ask -Provider chatgpt -Model 'llama3.1:8b' -TimeoutMs 120000 `
          -System "Skriv altid på flydende, korrekt dansk. Svar i punktopstilling når der bedes om flere idéer." `
          -Prompt $q
      } else {
        $ans = "[INFO] Ingen askdk_pro/ask_ai.ps1 fundet."
      }
    }

    # Fail-safe: hvis vi stadig ikke har 3 bullets, formater de første linjer som bullets
    $bulCount = ([regex]::Matches($ans,'(^|\r?\n)\s*(?:-|•|–|—|\d+\.)\s')).Count
    if ($bulCount -lt 3) {
      $first3 = New-Object System.Collections.Generic.List[string]
      foreach($l in ($ans -split '\r?\n')) {
        $t = $l.Trim()
        if ($t) { $first3.Add($t.TrimStart('-','•','–','—',' ')) }
        if ($first3.Count -ge 3) { break }
      }
      if ($first3.Count -gt 0) {
        $ans = ($first3 | ForEach-Object { '- ' + $_ }) -join [Environment]::NewLine
      }
    }

    $ans | Write-Output
    return
  }
} catch { Write-Warning "spørg/læs fejlede: $($_.Exception.Message)" }
# == /spørge-router ==.Exception.Message)" }
# == /builder orchestrator routers ==

# == spørge-router (tving askdk_pro) ==
try {
  if ($Text -imatch '^\s*spørg\s+jarvis\s+og\s+l(?:æ|ae)s\s*:\s*(.+)$') {
    $q = $Matches[1]

    # Hint til modellen hvis der bedes om 3 idéer
    if ($q -imatch '\b(giv|kom med|angiv)\s+3\b') {
      $q = "$q`nSvar i præcis 3 punktopstillede linjer, hver linje skal starte med '- '."
    }

    # Brug altid askdk_pro (bedre bullets på dansk)
    if (Get-Command askdk_pro -EA SilentlyContinue) {
      $ans = askdk_pro $q
    } else {
      # Fallback via ask_ai.ps1
      $ask = Join-Path (Join-Path $PSScriptRoot 'tools') 'ask_ai.ps1'
      if (Test-Path $ask) {
        $ans = & $ask -Provider chatgpt -Model 'llama3.1:8b' -TimeoutMs 120000 `
          -System "Skriv altid på flydende, korrekt dansk. Svar i punktopstilling når der bedes om flere idéer." `
          -Prompt $q
      } else {
        $ans = "[INFO] Ingen askdk_pro/ask_ai.ps1 fundet."
      }
    }

    # Fail-safe: hvis vi stadig ikke har 3 bullets, formater de første linjer som bullets
    $bulCount = ([regex]::Matches($ans,'(^|\r?\n)\s*(?:-|•|–|—|\d+\.)\s')).Count
    if ($bulCount -lt 3) {
      $first3 = New-Object System.Collections.Generic.List[string]
      foreach($l in ($ans -split '\r?\n')) {
        $t = $l.Trim()
        if ($t) { $first3.Add($t.TrimStart('-','•','–','—',' ')) }
        if ($first3.Count -ge 3) { break }
      }
      if ($first3.Count -gt 0) {
        $ans = ($first3 | ForEach-Object { '- ' + $_ }) -join [Environment]::NewLine
      }
    }

    $ans | Write-Output
    return
  }
} catch { Write-Warning "spørg/læs fejlede: $($_.Exception.Message)" }
# == /spørge-router ==

